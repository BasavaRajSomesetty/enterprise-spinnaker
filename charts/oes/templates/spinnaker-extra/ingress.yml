{{- if and (.Values.installSpinnaker) (.Values.spinnaker.createIngress) }}
{{- if (.Values.spinnaker.gitopsHalyardInit.enabled) }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
  name: spinnaker-deck-ingress
spec:
  rules:
  - host: {{ .Values.spinnaker.ingress.host }}
    http:
      paths:
      - backend:
          serviceName: spin-deck
          servicePort: 9000
        path: /
  tls:
  - hosts:
    - {{ .Values.spinnaker.ingress.host }}
    secretName: ui-tls
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
  name: spinnaker-gate-ingress
spec:
  rules:
  - host: {{ .Values.spinnaker.ingressGate.host }}
    http:
      paths:
      - backend:
          serviceName: spin-gate
          servicePort: 8084
        path: /
      - backend:
          serviceName: spin-gate
          servicePort: 8084
        path: /login
      - backend:
          serviceName: spin-gate
          servicePort: 8084
        path: /auth/*
  tls:
  - hosts:
    - {{ .Values.spinnaker.ingressGate.host }}
    secretName: api-tls
---
{{- else }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: spinnaker
  name: spinnaker-ingress
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backend:
    serviceName: spin-deck-np
    servicePort: 9000
  rules:
  - http:
      paths:
      - path: /login
        backend:
          serviceName: spin-gate-np
          servicePort: 8084
      - path: /auth/*
        backend:
          serviceName: spin-gate-np
          servicePort: 8084
{{- end }}
{{- end }}
